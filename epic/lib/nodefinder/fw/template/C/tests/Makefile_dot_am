SUBDIRS = 

INCLUDES = @FW_PKGCONFIG_PREREQS_CFLAGS@ -I../src

if FW_HAVE_VALGRIND
VALGRIND_OPTS ?= -q
MEMCHECK_OPTS ?= --num-callers=20
LEAKCHECK_OPTS ?= --num-callers=20 		\
	 	  --leak-check=yes 		\
		  --leak-resolution=high	\
	 	  --show-reachable=yes

memcheck: 
	TESTS_ENVIRONMENT="$(TESTS_ENVIRONMENT_PRE_MEMCHECK) $(LIBTOOL) --mode=execute valgrind $(VALGRIND_OPTS) --tool=memcheck $(MEMCHECK_OPTS)" make check

memcheck-%: %
	$(TESTS_ENVIRONMENT_PRE_MEMCHECK) $(LIBTOOL)	\
	  --mode=execute valgrind 			\
	  $(VALGRIND_OPTS) 				\
	  --tool=memcheck				\
	  $(MEMCHECK_OPTS)				\
	  ./$<

leakcheck: 
	TESTS_ENVIRONMENT="$(TESTS_ENVIRONMENT_PRE_LEAKCHECK) $(LIBTOOL) --mode=execute valgrind $(VALGRIND_OPTS) --tool=memcheck $(LEAKCHECK_OPTS)" make check

leakcheck-%: %
	$(TESTS_ENVIRONMENT_PRE_LEAKCHECK) $(LIBTOOL)	\
	  --mode=execute valgrind 			\
	  $(VALGRIND_OPTS) 				\
	  --tool=memcheck  				\
	  $(LEAKCHECK_OPTS)				\
	  ./$<

else

memcheck: 
	@echo "can't memcheck: valgrind not installed" 1>&2
	@exit 1

memcheck-%: %
	@echo "can't memcheck $*: valgrind not installed" 1>&2
	@exit 1

leakcheck: 
	@echo "can't leakcheck: valgrind not installed" 1>&2
	@exit 1

leakcheck-%: %
	@echo "can't leakcheck $*: valgrind not installed" 1>&2
	@exit 1

endif

CLEANFILES = 		\
  $(wildcard *.bb)	\
  $(wildcard *.bbg)	\
  $(wildcard *.da)	\
  $(wildcard *.gcov)

MAINTAINERCLEANFILES =	\
  Makefile.am		\
  Makefile.in		\
  test-wrapper.sh

TESTS_ENVIRONMENT ?= ./test-wrapper.sh

check_SCRIPTS = test-wrapper.sh

include $(top_srcdir)/tests/Makefile.am.local
